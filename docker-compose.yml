version: '3.7'

networks:
  frontend:
    external:
      name: proxy_proxy
  backend:

services:
  nginx:
    build: ./docker/nginx
    container_name: mr-nginx
    restart: always
    tty: true
    environment:
      - VIRTUAL_HOST=mymarket.test
    links:
      - php
      - redis
      - postgres
      #- jenkins
    volumes:
      - ./www:/var/www
      - ./logs/nginx:/var/log/nginx
    networks:
      - frontend
      - backend

  php:
    build: ./docker/php
    restart: always
    tty: true
    container_name: mr-php
    links:
      - redis
      - postgres
      #- jenkins
    networks:
      - backend
    environment:
      COMPOSER_MEMORY_LIMIT: 2G
      XDEBUG_CONFIG: client_host=192.168.227.1 client_port=9003 remote_enable=1
      PHP_IDE_CONFIG: serverName=Docker
    ports:
      - '9000:9000'
    volumes:
      - ./www:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini

  postgres:
    image: postgres:13.3
    restart: always
    container_name: mr-postgres
    networks:
      - backend
    environment:
      POSTGRES_DB: "mymarket"
      POSTGRES_USER: "mymarket"
      POSTGRES_PASSWORD: "root"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/mymarket:/var/lib/postgresql/data

  redis:
    image: bitnami/redis:latest
    restart: always
    tty: true
    container_name: redis
    volumes:
      - ./docker/redis:/bitnami/redis/data
    networks:
      - backend
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: mr-rabbitmq
    volumes:
      - ./docker/rabbitmq/data/:/var/lib/rabbitmq/
    env_file:
      - docker/rabbitmq/messagequeue.env
    networks:
      - backend
    ports:
      - 5672:5672
      - 15672:15672


    #region reserve
    #pgadmin:
    #  container_name: pgadmin
    #  image: dpage/pgadmin4:5.7
    #  environment:
    #    PGADMIN_DEFAULT_EMAIL: "allximik50@gmail.com"
    #    PGADMIN_DEFAULT_PASSWORD: "test"
    #    PGADMIN_CONFIG_SERVER_MODE: "False"
    #    VIRTUAL_HOST: pgadmin.mymarket.test
    #  volumes:
    #    - ./docker/pgadmin:/var/lib/pgadmin
    #  ports:
    #    - "5050:80"
    #  restart: unless-stopped
    #  networks:
    #    - frontend
    #    - backend

    #cron:
    #  container_name: cron
    #  build: ./docker/cron
    #  volumes:
    #    - ./logs/cron:/var/log
    #  networks:
    #    - backend
    #mysql:
    #  image: mysql:8.0.0
    #  tty: true
    #  restart: always
    #  container_name: mysql
    #  networks:
    #    - backend
    #  ports:
    #    - '3307:3306'
    #  volumes:
    #    - './docker/mysql/mymarket/config/mysql.cnf:/etc/mysql/conf.d/custom.cnf:ro'
    #    - './docker/mysql/mymarket/database:/var/lib/mysql'
    #  environment:
    #    - MYSQL_USER=mymarket
    #    - MYSQL_PASSWORD=root
    #    - MYSQL_ROOT_PASSWORD=root
    #    - MYSQL_DATABASE=mymarket

    #phpmyadmin:
    #  image: library/phpmyadmin
    #  container_name: phpmyadmin
    #  tty: true
    #  networks:
    #    - frontend
    #    - backend
    #  depends_on:
    #    - mysql
    #  environment:
    #    PMA_USER: root
    #    PMA_PASSWORD: root
    #    PMA_HOSTS: mysql
    #    PMA_PORT: 3306
    #    PMA_ARBITRARY: 1
    #    VIRTUAL_HOST: pma.catalog.test
    #  ports:
    #    - '8080:80'

  #jenkins:
  #  image: "jenkins/jenkins:lts"
  #  container_name: "jenkins_lts"
  #  volumes:
  #    - ./jenkins_home/:/var/jenkins_home
  #    - /var/run/docker.sock:/var/run/docker.sock:rw
  #    - /usr/bin/docker:/usr/bin/docker
  #  network_mode: host
  #  ports:
  #    - 8080:8080
  #  restart: always
  #endregion